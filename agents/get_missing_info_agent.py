import re
import json
from langchain.agents import initialize_agent, AgentType  # type: ignore
from langchain.tools import tool  # type: ignore
from llm import llm  # type: ignore

# ูุงุนุฏุฉ ุจูุงูุงุช ุงูุฃุณุฆูุฉ ุญุณุจ ููุน ุงูุทุงุฑุฆ
emergency_questions = {
    "ุญูุงุฏุซ ุงููุฑูุฑ": [
        "ุนุฏุฏ ุงููุตุงุจูู",
        "ูู ุงูุทุฑูู ูุบูู",
        "ูููุน ุฏููู",
        "ููุน ุงููุฑูุจุงุช"
    ],
    "ุงูุญุฑุงุฆู": [
        "ููุน ุงูููุงู ุงููุญุชุฑู (ููุฒูุ ุณูุงุฑุฉุ ูุณุชูุฏุน...)",
        "ูู ููุงู ุฃุดุฎุงุต ุนุงูููู",
        "ูุฏู ุงูุชุดุงุฑ ุงูุญุฑูู",
        "ูุฌูุฏ ููุงุฏ ูุงุจูุฉ ููุงููุฌุงุฑ"
    ],
    "ุงูุงููุฌุงุฑุงุช ูุงูุชุณุฑูุจุงุช": [
        "ูุตุฏุฑ ุงูุงููุฌุงุฑ ุฃู ุงูุชุณุฑุจ",
        "ูู ููุฌุฏ ูุตุงุจูู",
        "ูู ุชู ุฅุฎูุงุก ุงูููุงู",
        "ูุฏู ุงูุถุฑุฑ ุงููุงุฏู ุงูุธุงูุฑ"
    ],
    "ุงูุฌุฑุงุฆู ูุงูุญูุงุฏุซ ุงูุฃูููุฉ": [
        "ุนุฏุฏ ุงูุฃุดุฎุงุต ุงููุดุงุฑููู",
        "ููุน ุงูุณูุงุญ ุฅู ููุฌุฏ",
        "ูู ููุงู ูุตุงุจูู",
        "ูุตู ุงูุดุฎุต ุฃู ุงูุฃุดุฎุงุต ุงููุชูุฑุทูู"
    ],
    "ุงูุญุงูุงุช ุงูุทุจูุฉ ุงูุทุงุฑุฆุฉ": [
        "ุนูุฑ ุงููุฑูุถ ุงูุชูุฑูุจู",
        "ุงููุนู: ูุงุนู / ูุงูุฏ ูุนู",
        "ูู ูุชููุณ ุงููุฑูุถ",
        "ูู ุชููู ุงููุฑูุถ ุฃู ุฅุณุนุงู ุฃููู",
        "ูุฏุฉ ุงุณุชูุฑุงุฑ ุงูุญุงูุฉ"
    ],
    "ุงูููุงุฑุซ ุงูุทุจูุนูุฉ": [
        "ุงููููุน ุงูุฏููู",
        "ูู ููุงู ูุตุงุจูู ุฃู ููููุฏูู",
        "ูู ุงูุทุฑู ููุทูุนุฉ",
        "ูู ุชุญุชุงุฌูู ุฅูู ุฅููุงุฐ ููุฑู"
    ],
    "ุทูุงุฑุฆ ุจููุฉ ุชุญุชูุฉ": [
        "ูููุน ุงููุดููุฉ",
        "ูุฏู ุชุฃุซูุฑูุง (ููุฒู ูุงุญุฏ / ุญู ูุงูู)",
        "ููุฐ ูุชู ุจุฏุฃุช ุงููุดููุฉุ",
        "ูู ููุฌุฏ ุฎุทุฑ ูุจุงุดุฑ ุนูู ุงููุงุฑุฉุ"
    ],
    "ุทูุงุฑุฆ ุฅูุณุงููุฉ ุฃู ุงุฌุชูุงุนูุฉ": [
        "ูุตู ุงูุดุฎุต (ุงูุทููุ ุงูููููุฏ...)",
        "ูููุน ุขุฎุฑ ูุดุงูุฏุฉ",
        "ูู ูู ูู ุฎุทุฑ ูุจุงุดุฑุ",
        "ูุฏุฉ ุงูุบูุงุจ ุฃู ููุฏุงู ุงูุงุชุตุงู",
        "ูู ุฃุธูุฑ ุณููููุง ุบุฑูุจูุง ุฃู ุฎุทุฑูุงุ",
        "ุชูุงุตูู ุงูุชูุงุตู ุฅู ููุฌุฏุช"
    ]
}

@tool
def get_missing_info(user_input: str, emergency_type: str) -> str:
    """
    ูุญูู ุงูุจูุงุบ ููุณุชูุชุฌ ูุง ูู ุงููุนูููุงุช ุงููุงูุตุฉ (ูุซู ุนุฏุฏ ุงููุตุงุจููุ ุญุงูุฉ ุงููููุนุ ุตูุฑุ ...).
    ูุฑุฌุน ูุตูุง ูุญุชูู ุนูู ุฃุณุฆูุฉ ุชูุถูุญูุฉ ุจูุบุฉ ููุฐุจุฉ ุจูุงุกู ุนูู ููุน ุงูุทุงุฑุฆ ููุท.
    """

    # ุงูุชุญูู ูู ูุฌูุฏ ุงูููุน ูู ุงููุงููุณ
    questions = emergency_questions.get(emergency_type)
    if not questions:
        return f"โ ููุน ุงูุทุงุฑุฆ ุบูุฑ ูุนุฑูู: {emergency_type}"

    questions_prompt = "\n".join([f"- {q}" for q in questions])

    prompt = f"""
    ูุฐุง ุจูุงุบ ูู ุงููุณุชุฎุฏู: {user_input}

    โ๏ธููุน ุงูุจูุงุบ: {emergency_type}

    ูู ุชูุฌุฏ ุฃู ูุนูููุงุช ูุงูุตุฉ ูุฌุจ ุนูู ุงููุณุชุฎุฏู ุฅุฏุฎุงููุงุ  
    ูููุง ููู ูุงุฆูุฉ ุฃูุซูุฉ ููุณุงุนุฏุชู ูู ุชุญุฏูุฏ ุงููุนูููุงุช ุงูุชู ูุฏ ุชููู ูุงูุตุฉ:

    {questions_prompt}

    โ ุฃุฌุจ ููุท ุจูุงุฆูุฉ JSON ุชุญุชูู ุนูู ุงูุฃุณุฆูุฉ ุงููุงูุตุฉ ูู ุงูุจูุงุบ.
    [
    "ุ",
    "ุ",
    ...
    ]

    โ๏ธ ูุง ุชูุชุจ ุฃู ุดุฑุญ ุฃู ุฌููุฉ ุฎุงุฑุฌ JSON.
    """


    response = llm.invoke(prompt)
    print("[๐ raw LLM response]:", response.content)

    try:
        # ุงุณุชุฎุฑุงุฌ ุฃูู ูุงุฆูุฉ JSON ุจุงุณุชุฎุฏุงู Regex
        match = re.search(r"\[.*?\]", response.content, re.DOTALL)
        if not match:
            raise ValueError("JSON list not found")

        missing_questions = json.loads(match.group(0))

        if isinstance(missing_questions, list) and missing_questions:
            formatted_list = "\n".join([f"- {q}" for q in missing_questions])
            return f"โ ุดูุฑูุง ุนูู ุงูุจูุงุบ. ูุชุญุณูู ุงูุงุณุชุฌุงุจุฉุ ููุฑุฌู ุชูุถูุญ ุจุนุถ ุงููุนูููุงุช:\n{formatted_list}"
        else:
            return "โ ุงูุจูุงุบ ูุญุชูู ุนูู ูุนูููุงุช ูุงููุฉ ูุจุฏุงูุฉุ ุดูุฑูุง ูู."

    except Exception as e:
        print("[โ parsing error]:", e)
        return "ุชุนุฐุฑ ุชุญููู ุงููุนูููุงุช ุงููุงูุตุฉ. ููุฑุฌู ุฅุนุงุฏุฉ ุงููุญุงููุฉ."

# ุฅูุดุงุก ุงูุนููู
get_missing_info_agent = initialize_agent(
    tools=[get_missing_info],
    llm=llm,
    agent=AgentType.OPENAI_FUNCTIONS,
    verbose=True,
)
