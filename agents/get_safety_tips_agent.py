import re
import json
from langchain.agents import initialize_agent, AgentType  # type: ignore
from langchain.tools import tool  # type: ignore
from llm import llm  # type: ignore

# ูุงุนุฏุฉ ุจูุงูุงุช ุงููุตุงุฆุญ ููุณุงุนุฏุฉ ููุจุฑููุจุช
tips_map = {
    "ุญูุงุฏุซ ุงููุฑูุฑ": [
        "ุชุฃูุฏ ูู ุชุดุบูู ุฃุถูุงุก ุงูุชุญุฐูุฑ (ุงูููุดุฑ) ูุชูุจูู ุงูุณูุงุฑุงุช ุงููุงุฏูุฉ.",
        "ูู ุจุฅุทูุงุก ูุญุฑู ุงูุณูุงุฑุฉ ูููุน ูุดูุจ ุญุฑูู.",
        "ูุง ุชุญุงูู ููู ุงููุตุงุจูู ูุง ูู ููู ููุงู ุฎุทุฑ ูุจุงุดุฑ.",
        "ุงุจูู ูู ููุงู ุขูู ุจุนูุฏูุง ุนู ุงูุทุฑูู ุฅุฐุง ููุช ูุงุฏุฑูุง.",
        "ุฅุฐุง ุฃูููุ ูู ุจุชูุซูู ุงูุญุงุฏุซ ุจุงูุตูุฑ ุฃู ููุงุทุน ุงูููุฏูู.",
    ],
    "ุงูุญุฑุงุฆู": [
        "ุญุงูู ุงูุญูุงุธ ุนูู ูุฏูุฆู ูุฏุฑ ุงูุฅููุงู ูุงุชุฎุงุฐ ูุฑุงุฑุงุช ุณูููุฉ.",
        "ุงุจุชุนุฏ ููุฑูุง ุนู ูุตุฏุฑ ุงูุญุฑูู.",
        "ุฅุฐุง ูุงู ุงูุฏุฎุงู ูุซูููุงุ ุงูุญูู ูุชุฌูุจ ุงุณุชูุดุงู ุงูุฏุฎุงู.",
        "ุฃุณุฑุน ุจุฅุฎูุงุก ุงููุจูู ุฃู ุงูููุทูุฉ ุงููุตุงุจุฉุ ูุน ุงูุญุฑุต ุนูู ุนุฏู ุงุณุชุฎุฏุงู ุงููุตุงุนุฏ.",
        "ูุง ุชุญุงูู ุฅุทูุงุก ุงูุญุฑูู ุงููุจูุฑ ุจููุณู.",
        "ุฃุบูู ูุตุงุฏุฑ ุงูุบุงุฒ ุฃู ุงูููุฑุจุงุก ุฅุฐุง ูุงู ุฐูู ุขูููุง.",
    ],
    "ุงูุณุฑูุฉ": [
        "ูุง ุชุญุงูู ููุงุฌูุฉ ุงูุณุงุฑู.",
        "ูุง ุชูู ุจุฃู ุนูู ูู ุดุฃูู ุชุนุฑูุถ ุณูุงูุชู ุฃู ุณูุงูุฉ ูู ูุนู ุฅูู ุฎุทุฑ.",
        "ุญุงูุธ ุนูู ูุฏูุฆู ูุฏุฑ ุงูุฅููุงู ููุฐุง ูุณุงุนุฏู ุนูู ุงูุฎุฑูุฌ ุจุฃูู ุฎุณุงุฆุฑ ููููุฉ.",
        "ุญุงูู ุญูุธ ููุงูุญ ุงูุฌุงูู ูุงุชุฌุงู ูุฑูุจู.",
        "ูุง ุชููุณ ุฃู ุดูุก ูู ูููุน ุงูุณุฑูุฉ ููุญูุงุธ ุนูู ุงูุฃุฏูุฉ.",
    ],
    "ุงูุงููุฌุงุฑุงุช ูุงูุชุณุฑูุจุงุช": [
        "ุงุจุชุนุฏ ุนู ูููุน ุงูุงููุฌุงุฑ ุฃู ุงูุชุณุฑุจ ููุฑูุง.",
        "ุฅุฐุง ูุงู ููุงู ูุจูู ูุฑูุจุ ุงุฏุฎู ุฅููู ูุงุญูู ููุณู. ุฅุฐุง ูู ููู ููุงู ูุจููุ ุงุจุญุซ ุนู ุฃู ุฌุณู ุตูุจ ูููุฑ ูู ุจุนุถ ุงูุญูุงูุฉ ูุซู ุฌุฏุงุฑ ุฃู ููู.",
        "ุงุณุชุฎุฏู ูุทุนุฉ ููุงุด ูุชุบุทูุฉ ุฃููู ูููู ูุญูุงูุฉ ููุณู ูู ุงูุบุจุงุฑ ุฃู ุงูููุงุฏ ุงูููููุงุฆูุฉ.",
        "ุชุฌูุจ ุงุณุชูุดุงู ุงูุบุงุฒุงุช ุฃู ุงูุงูุชุฑุงุจ ูู ุงูููุงุฏ ุงูููุดููุฉ.",
        "ูุง ุชุญุงูู ุงููุฑูุจ ุจุงูุณูุงุฑุฉ ููุฏ ูุคุฏู ุงูุงุฒุฏุญุงู ุฅูู ุชูุงูู ุงููุถุน.",
        "ูุง ุชุณุชุฎุฏู ุงููุงุชู ุฃู ุงูููุฑุจุงุก ูู ูุญูุท ุงูุชุณุฑุจ.",
    ],
    "ุงูุฌุฑุงุฆู ูุงูุญูุงุฏุซ ุงูุฃูููุฉ": [
        "ุงุญุชูู ูู ููุงู ุขูู ููุง ุชุชุฏุฎู.",
        "ุฃุบูู ุงูุฃุจูุงุจ ูุงูููุงูุฐ ุฅุฐุง ููุช ูู ุงูููุฒู ุฃู ูุชุฌุฑ.",
        "ูุง ุชุญุงูู ุชุตููุฑ ุฃู ูุทุงุฑุฏุฉ ุงูุฃุดุฎุงุต ุงููุณูุญูู.",
        "ูู ุจุชุฏููู ุชูุงุตูู ูููุฉ ูุซู ุงูุดููุฏ ุฃู ุงูุธุฑูู ุงููุญูุทุฉ.",
    ],
    "ุงูุญุงูุงุช ุงูุทุจูุฉ ุงูุทุงุฑุฆุฉ": [
        "ุญุงูุธ ุนูู ูุฏูุฆู ูุทูุฆู ุงููุตุงุจ ุฅู ุฃููู.",
        "ูุง ุชุนุทู ุงููุตุงุจ ุฃู ุทุนุงู ุฃู ุดุฑุงุจ.",
        "ุงูุชุญ ูุฌุฑู ุงูููุงุก ุฅุฐุง ูุงู ุงููุตุงุจ ูุงูุฏูุง ูููุนู.",
        "ูุฏู ุงูุฅุณุนุงูุงุช ุงูุฃูููุฉ ุงูุฃุณุงุณูุฉ ุฅู ุฃููู.",
        "ุฑุงูุจ ุงูุนูุงูุงุช ุงูุญูููุฉ ุญุชู ูุตูู ุงููุณุงุนุฏุฉ.",
        "ูุง ุชุญุงูู ูุนุงูุฌุฉ ุงูุญุงูุงุช ุงูุฎุทูุฑุฉ ุจููุณู ุฅู ูู ุชูู ูุฏุฑุจูุง.",
    ],
    "ุงูููุงุฑุซ ุงูุทุจูุนูุฉ": [
        "ุงูุชุฒู ุจููุงู ุขูู ุจุนูุฏ ุนู ุงูููุงูุฐ ุฃู ุงูุฃุดุฌุงุฑ.",
        "ุงุณุชููู ุนูู ุงูุฃุฑุถ ูุบุทู ุฑุฃุณู ูุญูุงูุชู ูู ุงูุฃุดูุงุก ุงููุชุณุงูุทุฉ.",
        "ุงุจุญุซ ุนู ููุฌุฃ ุขูู ุฏุงุฎู ุงูููุฒู.",
        "ุงูุตู ุงูููุฑุจุงุก ูุงูููุงู ุฅุฐุง ุฃููู.",
        "ูุง ุชุญุงูู ุนุจูุฑ ุงูุทุฑู ุงููุบููุฑุฉ ุจุงูููุงู.",
        "ุฅุฐุง ููุช ูู ุงูุณูุงุฑุฉุ ุชููู ุจุนูุฏุงู ุนู ุงููุจุงูู ูุงูุฃุดุฌุงุฑ ูุงุจูู ุฏุงุฎู ุงูุณูุงุฑุฉ.",
    ],
    "ุทูุงุฑุฆ ุจููุฉ ุชุญุชูุฉ": [
        "ุชุฌูุจ ููุงูุณุฉ ุงูุฃุณูุงู ุฃู ุงูููุงู ุงูููุดููุฉ.",
        "ูุง ุชูุชุฑุจ ูู ุงููุจุงูู ุงููุชุตุฏุนุฉ ุฃู ุงูููุฏุฏุฉ ุจุงูุงูููุงุฑ.",
        "ุญุฐุฑ ุงูุขุฎุฑูู ูู ุงูููุทูุฉ ุฅุฐุง ููุฌุฏ ุฎุทุฑ ูุจุงุดุฑ.",
        "ุชุฌูุจ ููุณ ุฃู ููุงุฏ ุฃู ูุนุฏุงุช ูุดุชุจู ุจูุง.",
        "ุงูุชูุท ุตูุฑูุง ุฃู ููุงุทุน ููุฏูู ููููุทูุฉ ุงููุชุถุฑุฑุฉ.",
    ],
    "ุทูุงุฑุฆ ุฅูุณุงููุฉ ุฃู ุงุฌุชูุงุนูุฉ": [
        "ุงุจูู ูุฑูุจูุง ูู ูููุน ุขุฎุฑ ูุดุงูุฏุฉ ููุดุฎุต ุงูููููุฏ.",
        "ูู ุจุชูุฏูู ุงูุฅุณุนุงูุงุช ุงูุฃูููุฉ ุงูุฃุณุงุณูุฉ ุฅุฐุง ููุช ูุฏุฑุจูุง ุนูู ุฐููุ ุฃู ุงุชุตู ุจุงูุฌูุงุช ุงููุฎุชุตุฉ.",
        "ูุฏู ุงูุฏุนู ุงูููุณู ูุงููุนููู ูููุชุถุฑุฑูู ูุทูุฃููู.",
        "ูุง ุชูุดุฑ ูุนูููุงุช ุงูุดุฎุต ุงูููููุฏ ูุจู ุงูุชูุณูู ูุน ุงูุฌูุงุช ุงูุฑุณููุฉ.",
        "ุฅุฐุง ูุงู ููุงู ุฎุทุฑ ูุจุงุดุฑุ ุงุจุญุซ ุนู ููุงู ุขูู ููุงุฎุชุจุงุก ุฃู ุงูุฅููุงุก.",
    ],
}

@tool
def get_safety_tips(user_input: str, emergency_type: str) -> str:
    """
    ููุฑุฌุน ูุตุงุฆุญ ุงูุณูุงูุฉ ุงูููุงุณุจุฉ ุจูุงุกู ุนูู ููุน ุงูุจูุงุบ ููุต ุงูุจูุงุบ.
    ูุฑุฌุน JSON ููุท ูุญุชูู ูุงุฆูุฉ ูุตุงุฆุญ ุงูุณูุงูุฉ.
    """

    # ุชุญุถูุฑ ุงููุตุงุฆุญ ููุซุงู ููุจุฑููุจุช
    tips_example_list = tips_map.get(emergency_type, ["ูุง ุชูุฌุฏ ูุตุงุฆุญ ูุชููุฑุฉ ููุฐุง ุงูููุน ูู ุงูุทูุงุฑุฆ."])
    tips_prompt = "\n".join([f"- {tip}" for tip in tips_example_list])

    prompt = f"""
ูุฐุง ุจูุงุบ ุงููุณุชุฎุฏู: {user_input}

ููุน ุงูุจูุงุบ: {emergency_type}

ููุฏ ูููุณุชุฎุฏู ุจุนุถ ุงูุงุญุชูุงุทุงุช ูุงููุตุงุฆุญ ุงูููุงุณุจุฉ ููุฐุง ุงูุจูุงุบ.

ูููุง ููู ูุงุฆูุฉ ูุณุงุนุฏุฉ ูุฃูุซูุฉ ูููุตุงุฆุญ ุงูุชู ูููู ุชูุฏูููุง:

{tips_prompt}

โ ุฃุฌุจ ููุท ุจูุงุฆูุฉ JSON ุชุญุชูู ุนูู ูุตุงุฆุญ ุงูุณูุงูุฉ ุงูููุงุณุจุฉ ููุฐุง ุงูุจูุงุบ.
[
  "ูุตูุญุฉ 1",
  "ูุตูุญุฉ 2",
  ...
]

โ๏ธ ูุง ุชูุชุจ ุฃู ุดุฑุญ ุฃู ุฌููุฉ ุฎุงุฑุฌ JSON.
"""

    response = llm.invoke(prompt)
    print("[๐ raw LLM response]:", response.content)

    try:
        match = re.search(r"\[.*?\]", response.content, re.DOTALL)
        if not match:
            raise ValueError("JSON list not found")
        safety_tips = json.loads(match.group(0))

        if isinstance(safety_tips, list) and safety_tips:
            return json.dumps(safety_tips, ensure_ascii=False)
        else:
            return json.dumps(["ูุง ุชูุฌุฏ ูุตุงุฆุญ ูุชููุฑุฉ ููุฐุง ุงูููุน ูู ุงูุทูุงุฑุฆ."], ensure_ascii=False)
    except Exception as e:
        print("[โ parsing error]:", e)
        return json.dumps(["ุชุนุฐุฑ ุชุญููู ูุตุงุฆุญ ุงูุณูุงูุฉ. ูุฑุฌู ุฅุนุงุฏุฉ ุงููุญุงููุฉ."], ensure_ascii=False)


# ุฅูุดุงุก ุงูุนููู
get_safety_tips_agent = initialize_agent(
    tools=[get_safety_tips],
    llm=llm,
    agent=AgentType.OPENAI_FUNCTIONS,
    verbose=True,
)
